name: JVM Test Action

on:
  workflow_call:
    inputs:
      java-version:
        description: "Optional java version"
        required: false
        type: string
        default: "21"
      java-distribution:
        description: "Optional java distribution"
        required: false
        type: string
        default: "zulu"
      build-cache:
        description: "Cache to use for the build tool"
        required: false
        type: string
        default: "gradle"
      test-command:
        description: "Optional test command to run (default to ./gradlew test)"
        required: false
        type: string
        default: "./gradlew test"
      retention-days:
        description: "Number of days to retain the uploaded test artifacts"
        required: false
        type: number
        default: 4
      runs-on:
        description: "Optional label for the runner to run on"
        required: false
        type: string
        default: "['ubuntu-latest']"
      publish-test-report:
        description: "Whether to publish test report using junit-report action"
        required: false
        type: boolean
        default: true
      fail-on-test-failure:
        description: "Whether to fail the workflow on test failures"
        required: false
        type: boolean
        default: true

jobs:
  test:
    runs-on: ${{ fromJSON(inputs.runs-on) }}
    permissions:
      checks: write
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Set up JDK ${{ inputs.java-version }}
        uses: actions/setup-java@dded0888837ed1f317902acf8a20df0ad188d165 # v5
        with:
          java-version: ${{ inputs.java-version }}
          distribution: ${{ inputs.java-distribution }}
          cache: ${{ inputs.build-cache }}

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@4d9f0ba0025fe599b4ebab900eb7f3a1d93ef4c2 # v5

      - name: Make the short sha
        id: short_sha
        run: |
          echo "GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_OUTPUT

      - name: Run tests with Gradle
        run: |
          if [ ! -x ./gradlew ]; then
            chmod +x ./gradlew
          fi
          ${{ inputs.test-command }}

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@3585e9575db828022551b4231f165eb59a0e74e3 # v5
        if: ${{ inputs.publish-test-report && (success() || failure()) }}
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'
          summary: true
          detailed_summary: true
          annotate_only: false
          include_passed: true
          check_name: Test Results
          fail_on_failure: ${{ inputs.fail-on-test-failure }}

      - name: Upload test results as artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        if: always()
        with:
          name: test-results-${{ steps.short_sha.outputs.GITHUB_SHA_SHORT }}-${{ github.run_id }}
          path: |
            **/build/test-results/test/
            **/build/reports/tests/test/
          retention-days: ${{ inputs.retention-days }}
